
import os;
import glob;
import string;

pixmaps = glob.glob("*.png");

pixmaps.sort();

#Generate include files

f=open("pixmap_data_bytes.cpp","wb")

f.write("// THIS FILE HAS BEEN AUTOGENERATED, DONT EDIT!!\n");
f.write("#include \"pixmap_data.h\"\n");

f.write("\n\n");

f.write("\n\n\n");
	

	
for x in pixmaps:
	
	var_str="pixmap_"+x[:-4]+"_data";
	
	f.write("static const unsigned char "+ var_str +"[]={\n");
	
	pngf=open(x,"rb");
	
	b=pngf.read(1);
	while(len(b)==1):
		f.write(hex(ord(b)))
		b=pngf.read(1);
		if (len(b)==1):
			f.write(",")
			
	f.write("\n};\n\n\n");
	pngf.close();
	
f.write("const unsigned char * PixmapData::pixmap_list[PIXMAP_MAX]={\n");	

for x in pixmaps:
	var_str="pixmap_"+x[:-4]+"_data";
	if (x!=pixmaps[0]):
		f.write(",");
		
	f.write(var_str)
	
f.write("\n};\n");
	
f.write("\n");
				
f.close();

f=open("pixmap_data_enum.h","wb")

f.write("enum PixmapDataList {\n")

for x in pixmaps:
	
	
	pixmap_str='PIXMAP_'+x[:-4].upper();
	f.write("\t"+pixmap_str+",\n")


f.write("\tPIXMAP_MAX\n");
f.write("};\n");

f.close();

"""	
	
		
	
for x in pixmaps:
	
	
	pixmap_str='PIXMAP_'+x[:-4].upper();
	
	var_str=x.replace(".","_");
	print '    pixmap_map['+theme_str+']=QPixmap( (const char**) '+var_str+'); ';
	print '    pixmap_map_skin["'+var_str[:-4]+'"]='+theme_str+';';

"""	